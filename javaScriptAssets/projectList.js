const projectList = [
    {
        id:"personalWebsite",
        name:"Personal Website",
        desc:"This personal website was built out of the purpose to migrate my current software development skills over to front-end development and ReactJS. The entire site was built from the ground up without themes and templates.",
        gitHub:"https://github.com/ThomasShih/Personal-Website",
        video:null,
        length:"Ongoing",
        picture:"https://cdn.worldvectorlogo.com/logos/react.svg",
        keywords:["React","JavaScript","HTML","CSS","anime.js"],
    },
    {
        id:"carletonCourseDatabase",
        name:"Carleton Course Database",
        desc:"This project is done in conjuction with the Carleton Course Resources, this database serves as the backend of the project, in which RESTful API calls are made. The database was built using Django and hosted live on PythonAnywhere, visitng the hosted site link will direct you to what would happen if you did an API call for one particular course in the database.",
        gitHub:"https://github.com/ThomasShih/CU_ResourceDatabase",
        video:null,
        length:"Finished",
        picture:"https://static.djangoproject.com/img/logos/django-logo-positive.svg",
        keywords:["Python","Django","REST"],
        link:"http://thomasshih.pythonanywhere.com/db/course/MATH/1004/",
    },
    {
        id:"carletonCourseResource",
        name:"Carleton Course Resources",
        desc:"This project is done in conjuction with the Carleton Course Database, this site serves as the frontend of the project, in which api responses are displayed. Upon the loading of the site, a call is made to grab the courses currently available. After a course is selected, a call is made to fetch the course chapters list and the introduction, of which is displayed. Chapters can be subsequently displayed once selected.",
        gitHub:"https://github.com/ThomasShih/CU_ResourceDatabase",
        video:null,
        length:"Ongoing",
        picture:"https://cdn.worldvectorlogo.com/logos/react.svg",
        keywords:["React","REST","JavaScript","HTML","CSS"],
        link:"https://cumathnotes.netlify.app/",
    },
    {
        id:"Geograpy4",
        name:"Geograpy4",
        desc:"Upon experiencing geograpy3 with another project, I decided that this libary could use some improvements and hence I forked the original repository and did a overhaul into how it uses and processes the natural language input. Geograpy4 is a libary in which an input string/url can be inputed to output a list of posssible locations and full addresses as per Nominatim's database. The final parsed location phrases now looks at the context of the sentences and the proceeds to query Nominatim. Try it to see what it's about!",
        gitHub:"https://github.com/ThomasShih/geograpy4",
        video:null,
        length:"Finished",
        picture:"https://image.flaticon.com/icons/svg/921/921490.svg",
        keywords:["Python","Geocoding","NLP"],
        attribution:"Icon made by Freepik from www.flaticon.com",
    },
    {
        id:"redditLocationParser",
        name:"Location List Generator from Reddit Posts",
        desc:"A script to generate a data file of destinations mentioned from a given Reddit thread. The script fetches the thread response using Reddit's praw API and then utilizes a Natural Language Processing Libary to extract keywords related to Locations. The extracted keywords is then queried with a geocoder to get map data.",
        gitHub:"https://github.com/ThomasShih/Reddit-Thread-Location-Parser",
        video:null,
        length:"Finished",
        picture:"https://image.flaticon.com/icons/svg/52/52053.svg",
        keywords:["Python","Geocoding","NLP"],
        attribution:"Icon made by Freepik from www.flaticon.com",
    },
    {
        id:"diseaseSimulation",
        name:"Disease Spread Simulator",
        desc:"A simulation script of diseases spreading within a population. Users can input disease, individual, or population behaviour parameters to see how diseases spread in a simulation. While the simulator only vaguely repersents how an disease may spread, this libary is extremely useful for praticing optimizing large calculations.",
        gitHub:"https://github.com/ThomasShih/diseaseSimulation",
        video:null,
        length:"Finished",
        picture:"../assets/graph.svg",
        keywords:["Python"],
    },
    {
        id:"sortingAlgos",
        name:"Basic Sorting Algorithim Handbook",
        desc:"A website displaying animations of sorting algorithims in action. The animations are new for each page load as a new array of randomized numbers are generated and processed through each sort. This is all done using JavaScript the animations processed using React.",
        gitHub:"https://github.com/ThomasShih/algorithims",
        video:null,
        length:"Ongoing",
        picture:"https://image.flaticon.com/icons/svg/2103/2103620.svg",
        keywords:["JavaScript","React"],
        attribution:"Icon made by Becris from www.flaticon.com",
        link:"https://sortingalgos.netlify.app/",
    },
    {
        id:"alarmClock",
        name:"Alarm Clock Music Player",
        desc:"A school project involved the development of an alarm clock circuitry using verilog. I decided to step it up and add an non-required functionality of playing music when the alarm clock is triggered, or when prompt. This project required the understanding of basic audio compression algorithims, verilog, signal modulation, DAC converters.",
        gitHub:"https://github.com/ThomasShih/Alarm-Clock-with-Music-using-Verilog",
        video:"http://www.youtube.com/watch?v=m7OycdSeDko",
        length:"Finished",
        picture:null,
        keywords:["Verilog","FPGA","VHDL","PPM"],
    },
]
export default projectList