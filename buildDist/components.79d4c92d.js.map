{"version":3,"sources":["components/utilities/hoverEffect.js","components/utilities/pop.js","components/utilities/shake.js","components/NavbarLinks.js","javaScriptAssets/navbarLinks.js","components/ProfileImg.js","components/utilities/checkCDN.js","components/index.js"],"names":["Wrapper","animateButton","scale","duration","elasticity","elementID","id","originalColor","document","getElementById","getAttribute","anime","remove","targets","easing","changeComplete","undefined","style","color","enter","leave","className","hoverID","children","pop","opacity","callback","popIn","popOut","shake","intensity","originalElementColor","setAttribute","keyframes","translateX","changeBegin","NavbarLinks","removeScreen","redirectID","buttonID","window","location","href","includes","data","name","navbarLinks","ProfileImg","checkCDNexist","React","ReactDOM","console","log","error","alert","Landing","navbarComponents","map","link","key","useEffect","render"],"mappings":"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","file":"components.79d4c92d.js","sourceRoot":"..","sourcesContent":["function animateButton(scale, duration, elasticity,elementID){\r\n  //setup\r\n  const id = \"#\" + elementID;\r\n  const originalColor = document.getElementById(elementID).getAttribute(\"originalColor\")\r\n\r\n  //processing\r\n  anime.remove(id);\r\n  anime({\r\n    targets: id,\r\n    scale: scale,\r\n    duration: duration,\r\n    easing: 'easeInOutExpo',\r\n    elasticity:elasticity,\r\n    changeComplete: ()=>{if(originalColor!=undefined){document.getElementById(elementID).style.color= originalColor}},\r\n  });\r\n};\r\n\r\nconst enter = id => animateButton(1.1, 200, 400,id);\r\nconst leave = id => animateButton(1.0, 200, 100,id);\r\n\r\n//wrapper uses button element as it has onMouseEnter and onMouseLeave\r\nconst Wrapper = ({className,hoverID,children})=>(\r\n  <button id={hoverID}\r\n          className={className}\r\n          onMouseEnter= {() => {enter(hoverID)}}\r\n          onMouseLeave= {() => {leave(hoverID)}}>\r\n    {children}\r\n  </button>\r\n)\r\n\r\nexport default Wrapper","function pop(elementID, duration, elasticity,scale,opacity,callback=undefined){\r\n  //setup\r\n  if(callback === undefined){\r\n    callback = ()=>{return}\r\n  }\r\n  if(elementID === \"*\"){\r\n    var id = elementID;\r\n  }else{\r\n    var id = \"#\" + elementID;\r\n  }\r\n\r\n  //processing\r\n  anime({\r\n    targets: id,\r\n    opacity: opacity,\r\n    scale: scale,\r\n    duration: duration,\r\n    easing: 'easeInOutQuad',\r\n    changeComplete: callback,\r\n  });\r\n};\r\n\r\nfunction popIn(id){pop(id, 400,0,[0.5,1],[0,1])};\r\nfunction popOut(id,callback){pop(id, 500,0,[1,0],[1,0],callback)};\r\n\r\nexport {popIn,popOut}\r\n\r\n// import {popIn,popOut} from \"./utilities/pop.js\"","function shake(elementID,intensity){\r\n  //setup\r\n  var id = \"#\" + elementID;\r\n  const originalElementColor = document.getElementById(elementID).style.color\r\n  document.getElementById(elementID).setAttribute(\"originalColor\",originalElementColor) //place this color attribute in the element as an interupting this animation means the color wont be set\r\n\r\n  //processing\r\n  anime.remove(id);\r\n  anime({\r\n    targets: id,\r\n    duration: 500,\r\n    keyframes:[\r\n                  {translateX:intensity},\r\n                  {translateX:-1*intensity},\r\n                  {translateX:intensity},\r\n                  {translateX:-1*intensity},\r\n                  {translateX:intensity},\r\n                  {translateX:-1*intensity},\r\n                  {translateX:intensity},\r\n                  {translateX:0}\r\n              ],\r\n    easing: 'easeInOutQuad',\r\n    changeBegin   : ()=>{document.getElementById(elementID).style.color= \"rgba(255, 0, 0, 0.7)\"},\r\n    changeComplete: ()=>{document.getElementById(elementID).style.color= document.getElementById(elementID).getAttribute(\"originalColor\")},\r\n  });\r\n};\r\n\r\nexport {shake}\r\n\r\n// import {popIn,popOut} from \"./utilities/pop.js\"","import HoverEffect from \"./utilities/hoverEffect\"\r\nimport {popOut} from \"./utilities/pop\"\r\nimport {shake} from \"./utilities/shake\"\r\n\r\nfunction removeScreen(redirectID,buttonID){\r\n  if(window.location.href.includes(redirectID)){\r\n    shake(buttonID,2)\r\n  }else{\r\n    popOut(\"*\",() => {window.location.href = \"./\" + redirectID});\r\n  }\r\n}\r\n\r\nconst NavbarLinks = ({data}) =>(\r\n  <HoverEffect className=\"navLink\" hoverID={data.id}>\r\n    <a onClick = {() => {removeScreen(data.href,data.id)}}>\r\n      {data.name}\r\n    </a>\r\n  </HoverEffect>\r\n)\r\n\r\nexport default NavbarLinks","var navbarLinks = [\r\n    {\r\n        name:\"Work Experience\",\r\n        href:\"work.html\",\r\n        id:\"workLink\"\r\n    },{\r\n        name:\"Personal Projects\",\r\n        href:\"projects.html\",\r\n        id:\"projectLink\"\r\n    }\r\n]\r\nexport default navbarLinks\r\n","const ProfileImg = () => <div className=\"portrait\"><img id=\"landingPotrait\" src=\"./assets/portraitCircle.svg\"></img></div>\r\nexport default ProfileImg","{/* <script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script> */}\r\n{/* <script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script> */}\r\n{/* <script crossorigin src=\"https://cdn.jsdelivr.net/npm/animejs@3.2.0/lib/anime.min.js\"></script> */}\r\n\r\nfunction checkCDNexist(){\r\n    try {\r\n        anime = anime\r\n        React = React\r\n        ReactDOM = ReactDOM\r\n        console.log(\"All CDNs imported\")\r\n    } catch (error) {\r\n        alert(\"One or more CDNs could not be imported, issues with page may occur\")\r\n    }\r\n}\r\n\r\nexport default checkCDNexist","import NavbarLinks from \"./NavbarLinks\"\r\nimport navbarLinks from \"../javaScriptAssets/navbarLinks\"\r\nimport ProfileImg from \"./ProfileImg\"\r\n\r\nimport {popIn} from \"./utilities/pop.js\"\r\nimport checkCDNexist from \"./utilities/checkCDN\"\r\n\r\nfunction Landing(){\r\n  const navbarComponents = navbarLinks.map(link => <NavbarLinks key={link.id}\r\n                                                                data= {{\r\n                                                                        id:link.id,\r\n                                                                        key:link.name,\r\n                                                                        href:\"html/\" + link.href,\r\n                                                                        name:link.name,\r\n                                                                      }}/>)\r\n\r\n  React.useEffect(() => {\r\n                          checkCDNexist()\r\n                          navbarLinks.map(link => {popIn(link.id)})\r\n                          popIn(\"landingPotrait\")\r\n                          popIn(\"name\")\r\n                        },[])\r\n\r\n  return(\r\n          <div className=\"landing\">\r\n            <div className=\"name\" id=\"name\">Thomas Shih</div>\r\n            <ProfileImg/>\r\n            <div className=\"navLinks\">\r\n                {navbarComponents}\r\n            </div>\r\n          </div>\r\n        )\r\n}\r\n\r\nReactDOM.render(<Landing/>,document.getElementById(\"body\"))"]}